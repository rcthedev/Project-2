'use strict';Object.defineProperty(exports, '__esModule', { value: true });var _createClass = (function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError('Cannot call a class as a function');}}var Driver = (function () {function Driver() {_classCallCheck(this, Driver);}_createClass(Driver, [{ key: 'connect', value: 
    function connect(config) {var _this = this;

      return new Promise(function (resolve, reject) {

        if ('_connect' in _this) {
          _this._connect(config)['catch'](
          reject).
          then(function (db) {

            _this.db = db;
            resolve();});} else 

        {
          reject(new Error('Failed to connect'));}});} }, { key: 'executeQuery', value: 



    function executeQuery() {

      return new Promise(function (resolve, reject) {return reject(new Error('Query execution not implemented'));});} }, { key: 'streamQuery', value: 

    function streamQuery() {

      throw new Error('Query streaming not implemented');} }]);return Driver;})();exports['default'] = 



Driver;module.exports = exports['default'];