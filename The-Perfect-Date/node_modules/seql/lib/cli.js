'use strict';function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { 'default': obj };}var _path = require('path');var _path2 = _interopRequireDefault(_path);var _fs = require(
'fs');var _fs2 = _interopRequireDefault(_fs);var _debug = require(
'debug');var _debug2 = _interopRequireDefault(_debug);var _commander = require(
'commander');

var PACKAGE = require('../../package.json');
var debug = (0, _debug2['default'])('seql:cli');

var cli = new _commander.Command(PACKAGE.name);

cli.
version(PACKAGE.version).
option('-M, --migrations [directory]', 'directory containing the migrations').
option('-T, --template [filepath]', 'template to use when creating migrations').
option('-D, --database [module]', 'the module to load the database from').
usage('[options] <cmd>');

function _getConfig() {

  var config = {};

  config.migrationsDir = cli.migrations || 'migrations';
  config.templatePath = _path2['default'].join(config.migrationsDir, 'template.js');

  var databasePath = config.database || 'database.js';

  try {
    config.database = require(_path2['default'].join(process.cwd(), databasePath));} 
  catch (error) {
    debug('Failed to load database from ' + databasePath);}


  return config;}


cli.
command('create <name>').
description('create a new migration instance').
action(function (name) {

  var config = _getConfig();

  name = name || '';
  name = name.toLowerCase();
  name = name.replace(/[^a-z0-9\-_]/g, '');

  var currentTime = Date.now();
  var migrationPath = _path2['default'].join(config.migrationsDir, currentTime + '.' + name + '.migration.js');

  var template = _fs2['default'].readFileSync(config.templatePath, 'utf8');

  _fs2['default'].writeFileSync(migrationPath, template);});


_migration('up');
_migration('down');

cli.parse(process.argv);

function _migration(direction) {

  cli.
  command(direction).
  description('perform \'' + direction + '\' database migration').
  action(function (context) {return true;});}